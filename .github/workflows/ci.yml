name: CI
on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [scala3-v*]
jobs:
  ci:
    # run on external PRs, but not on internal PRs since those will be run by push to branch
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-22.04
    env:
      JAVA_OPTS: -Xmx4G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache sbt
        uses: coursier/cache-action@v6
        with:
          extraKey: sbt-cache-${{ runner.os }}
      - name: Compile
        run: sbt -v compile
      - name: Test
        run: sbt -v test

  mima:
    # run on external PRs, but not on internal PRs since those will be run by push to branch
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-22.04
    env:
      JAVA_OPTS: -Xmx4G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # checkout tags so that dynver works properly (we need the version for MiMa)
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache sbt
        uses: coursier/cache-action@v6
        with:
          extraKey: sbt-cache-${{ runner.os }}
      - name: Check MiMa # disable for major releases
        run: sbt -v core3/mimaReportBinaryIssues

  publish:
    name: Publish release
    needs: [ci]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/scala3-v'))
    runs-on: ubuntu-22.04
    env:
      STTP_NATIVE: 1
      JAVA_OPTS: -Xmx4G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache sbt
        uses: coursier/cache-action@v6
        with:
          extraKey: sbt-cache-release-${{ runner.os }}
      - name: Compile
        run: sbt compile
      - name: Publish artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Extract version from commit message
        run: |
          version=${GITHUB_REF/refs\/tags\/scala3-v/}
          echo "VERSION=$version" >> $GITHUB_ENV
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
      - name: Publish release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
          name: "scala3-v${{ env.VERSION }}"
          tag: "scala3-v${{ env.VERSION }}"
          version: "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
